// Code generated by ent, DO NOT EDIT.

package league

const (
	// Label holds the string label denoting the league type in the database.
	Label = "league"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeLeagueCertificateType holds the string denoting the league_certificate_type edge name in mutations.
	EdgeLeagueCertificateType = "league_certificate_type"
	// Table holds the table name of the league in the database.
	Table = "leagues"
	// LeagueCertificateTypeTable is the table that holds the league_certificate_type relation/edge.
	LeagueCertificateTypeTable = "league_certificate_type"
	// LeagueCertificateTypeInverseTable is the table name for the LeagueCertificateType entity.
	// It exists in this package in order to avoid circular dependency with the "leaguecertificatetype" package.
	LeagueCertificateTypeInverseTable = "league_certificate_type"
	// LeagueCertificateTypeColumn is the table column denoting the league_certificate_type relation/edge.
	LeagueCertificateTypeColumn = "league_id"
)

// Columns holds all SQL columns for league fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
